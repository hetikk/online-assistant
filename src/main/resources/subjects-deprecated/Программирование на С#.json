[
  {
    "question": "__________ это идентификатор, с помощью которого можно отметить какое-то место в программе.",
    "answers": [
      "Метка"
    ]
  },
  {
    "question": "Базовый класс – прародитель всех классов:",
    "answers": [
      "Object"
    ]
  },
  {
    "question": "Возобновление цикла выполняет оператор:",
    "answers": [
      "continue"
    ]
  },
  {
    "question": "Выберите из списка ВСЕ вещественные типы 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "11, 12, 13"
    ]
  },
  {
    "question": "Выберите результат выполнения фрагмента string S\u003d”345”; char D\u003d’45’; Console.WriteLine(Convert.ToInt16(S)+ Convert.ToInt32(D));",
    "answers": [
      "Фрагмент содержит ошибку, он не будет откомпилирован."
    ]
  },
  {
    "question": "Выберите слова, которые необходимо подставить в фразу. «___1___— это управляющий оператор, обрабатывающий множественное выделение и перечисления путем передачи управления одному из операторов ___2___в своем тексте.»",
    "answers": [
      "1 – switch; 2 - case"
    ]
  },
  {
    "question": "Выберите слово, которое необходимо подставить в фразу. «Блок ______содержит защищаемый код, в котором могут происходить исключения. Этот блок выполняется до момента возникновения исключения или до своего успешного завершения.»",
    "answers": [
      "Try"
    ]
  },
  {
    "question": "Для обработки каких типов данных используется Оператор foreach? a) массивы b) контейнеры. c) Простые типы данных",
    "answers": [
      "a и b"
    ]
  },
  {
    "question": "К каким операторам относится оператор break",
    "answers": [
      "К операторам безусловного перехода"
    ]
  },
  {
    "question": "К каким операторам относится оператор continue",
    "answers": [
      "К операторам безусловного перехода"
    ]
  },
  {
    "question": "Как оператор while изменяет значения переменной цикла?",
    "answers": [
      "Не изменяет"
    ]
  },
  {
    "question": "Какие два выражения эквивалентны? 1) a ? b : c ? d : e 2) a ? b : (c ? d : e) 3) (a ? b : c) ? d : e",
    "answers": [
      "1 и 2"
    ]
  },
  {
    "question": "Какие типы данных НЕ являются простыми. Выберите набор из списка 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "1, 15, 16, 17"
    ]
  },
  {
    "question": "Какие типы данных являются простыми. Выберите набор из списка 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "2 – 14"
    ]
  },
  {
    "question": "Какие типы данных являются сложными. Выберите набор из списка 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "1, 15, 16, 17"
    ]
  },
  {
    "question": "Каким будет результат выполнения фрагмента программы? Int x\u003d10; Int y\u003d15; if (x \u003e 10) if (y \u003e 20) Console.Write(\"1\"); else Console.Write(\"2\");",
    "answers": [
      "Ничего не произойдет"
    ]
  },
  {
    "question": "Каким будет результат выполнения фрагмента программы? Int x\u003d10; Int y\u003d15; if (x \u003e 10) { if (y \u003e 20) Console.Write(\"1\");} else Console.Write(\"2\");",
    "answers": [
      "2"
    ]
  },
  {
    "question": "Каким будет результат выполнения фрагмента программы? int S\u003d0; S\u003dConsole.Read(); if (S\u003d\u003d0) S+\u003d10; else S*\u003d2; if (s\u003d10) Console.WriteLine(“Было введено нулевое значение”)",
    "answers": [
      "В программе есть ошибка"
    ]
  },
  {
    "question": "Какого типа должно быть «Выражение» в операторе If (\u003cВыражение\u003e) \u003cОператор 1\u003e [else \u003cОператор 2\u003e] ?",
    "answers": [
      "Bool"
    ]
  },
  {
    "question": "Какое количество экземпляров case может включать оператор switch?",
    "answers": [
      "любое"
    ]
  },
  {
    "question": "Какой метод класса Console выводит символьную строку, дополняя её в конце символами перехода на новую строку и возврата каретки?",
    "answers": [
      "WriteLine()"
    ]
  },
  {
    "question": "Какой метод класса Console позволяет считать с системной консоли информацию до ближайшего символа перехода на новую строку?",
    "answers": [
      "ReadLine()"
    ]
  },
  {
    "question": "Какой метод класса Console считывает с системной консоли один символ?",
    "answers": [
      "Read()"
    ]
  },
  {
    "question": "Какой оператор лишний в списке?",
    "answers": [
      "repeat",
      "while"
    ]
  },
  {
    "question": "Какой фрагмент нельзя опустить в следующем операторе? for ([инициализация];[Условие];[Приращение]) \u003cОператор\u003e",
    "answers": [
      "Инициализация"
    ]
  },
  {
    "question": "Когда задается начальное значение переменной цикла в программе",
    "answers": [
      "до тела цикла оператора for"
    ]
  },
  {
    "question": "Когда проверяется условие завершения цикла в Операторе do?",
    "answers": [
      "после выполнения тела цикла"
    ]
  },
  {
    "question": "Конструкция switch в операторе выбора требует также служебных слов: a. Case b. break; d. Then c. Continue e. Default",
    "answers": [
      "a, b, e"
    ]
  },
  {
    "question": "Можно ли в цикле do использовать прерывания цикла break и возобновления цикла continue",
    "answers": [
      "Можно"
    ]
  },
  {
    "question": "Можно ли в цикле while использовать прерывания цикла break и возобновления цикла continue",
    "answers": [
      "Можно"
    ]
  },
  {
    "question": "Нужна ли переменная цикла и, нужно ли её инициализировать, инкрементировать и проверять, не вышло ли значение индекса массива за допустимые пределы в операторе foreach?",
    "answers": [
      "Не нужно"
    ]
  },
  {
    "question": "Оператор \u003cВыражение\u003e?\u003cЗначение1\u003e:\u003cЗначение2\u003e является",
    "answers": [
      "условным оператором"
    ]
  },
  {
    "question": "Оператор If (\u003cВыражение\u003e) \u003cОператор 1\u003e [else \u003cОператор 2\u003e] является:",
    "answers": [
      "условным оператором"
    ]
  },
  {
    "question": "Оператор for for (int i \u003d 1; i \u003c\u003d 5; i++) { Console.WriteLine(i); } повторно выполняет заключенный в цикл оператор (или несколько операторов) следующим образом: a. Сначала вычисляется начальное значение переменной i. b. Затем, пока значение i меньше или равно 5, условие получает значение true, оператор Console.WriteLine выполняется и затем происходит повторное вычисление i. c. Когда i становится больше 5, условие получает значение false и управление передается вне цикла.",
    "answers": [
      "a потом b потом с."
    ]
  },
  {
    "question": "Оператор while проверяет условие завершения цикла",
    "answers": [
      "перед выполнением тела цикла"
    ]
  },
  {
    "question": "Определение класса в C# содержит: a) данные, задающие свойства объектов класса; b) методы, определяющие поведение объектов класса; c) события, которые могут происходить с объектами класса.",
    "answers": [
      "Всё перечисленное"
    ]
  },
  {
    "question": "Результатом какой операции является значение операнда после его увеличения?",
    "answers": [
      "++X"
    ]
  },
  {
    "question": "Результатом этой операции является значение операнда до его уменьшения:",
    "answers": [
      "Y--"
    ]
  },
  {
    "question": "С помощью какого оператора можно в любой момент прервать выполнение цикла?",
    "answers": [
      "break"
    ]
  },
  {
    "question": "Сколько раз и где выполняется инициализация переменной цикла в операторе for?",
    "answers": [
      "1 раз перед началом цикла"
    ]
  },
  {
    "question": "Точка входа в программу на C#:",
    "answers": [
      "Метод Main"
    ]
  },
  {
    "question": "Укажите ВСЕ значимые типы 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16"
    ]
  },
  {
    "question": "Укажите лишний оператор в перечислении:",
    "answers": [
      "return"
    ]
  },
  {
    "question": "Укажите операторы сравнения в списке: a. \u003d b. \u003d\u003d c. !\u003d d. \u003c e. \u003c\u003c f. \u003e\u003e g. \u003e\u003d h. +\u003d",
    "answers": [
      "b, c, d, g"
    ]
  },
  {
    "question": "Укажите ссылочные типы 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "1, 15, 17"
    ]
  },
  {
    "question": "Укажите, что будет напечатано в результате выполнения фрагмента программного кода: int x\u003d5; int y\u003d9; x\u003dy/x; Console.WriteLine(“Результат1 \u003d {0}; Результат 2 \u003d {1}”,(y+x)/3,y/4.0);",
    "answers": [
      "Результат1 \u003d 3; Результат 2 \u003d 2,25"
    ]
  },
  {
    "question": "Целочисленными типами являются (перечислите ВСЕ целочисленные типы): 1) string 2) sbyte 3) byte 4) char 5) short 6) ushort 7) int 8) uint 9) long 10) ulong 11) float 12) double 13) decimal 14) Bool 15) Классы 16) структуры 17) интерфейсы",
    "answers": [
      "2, 3, 5, 6, 7, 8, 9, 10"
    ]
  },
  {
    "question": "Что возвращает оператор is, зависимости от того, можно ли выполнить, преобразование типов или нет?",
    "answers": [
      "true или false"
    ]
  },
  {
    "question": "Эквивалентны ли фрагменты? А) if(x !\u003d 0.0) s \u003d Math.Sin(x)/x; else s \u003d 1.0; Б) s \u003d x !\u003d 0.0 ? Math.Sin(x)/x : 1.0;",
    "answers": [
      "Да"
    ]
  },
  {
    "question": "___ многопоточность предполагает выделение всем запущенным приложениям квантов времени с использованием системного таймера.",
    "answers": [
      "вытесняющая"
    ]
  },
  {
    "question": "___ многопоточность, основана на применении резидентных программ.",
    "answers": [
      "переключательная"
    ]
  },
  {
    "question": "______________ это набор элементов, доступ к которым производится с помощью числового индекса.",
    "answers": [
      "Массив"
    ]
  },
  {
    "question": "В каждом конкретном случае ОС создаёт один главный ___,который является набором команд ЦП.",
    "answers": [
      "поток"
    ]
  },
  {
    "question": "Возвращается true или false, в зависимости от того, начинается или заканчивается строка заданной подстрокой",
    "answers": [
      "StartsWith, EndsWith"
    ]
  },
  {
    "question": "Вставляет подстроку в заданную позицию",
    "answers": [
      "Insert"
    ]
  },
  {
    "question": "Выделяет подстроку в заданной позиции",
    "answers": [
      "Substring"
    ]
  },
  {
    "question": "Выполняет набивку нужным числом пробелов в начале и в конце строки",
    "answers": [
      "PadLeft, PadRight"
    ]
  },
  {
    "question": "Для реализации ___ многопоточности приложения ОС время от времени передавали друг другу управление",
    "answers": [
      "совместной"
    ]
  },
  {
    "question": "Закрытые члены класса, доступные из того объекта, в котором они явно определены объявляются как:",
    "answers": [
      "private"
    ]
  },
  {
    "question": "Заменяет подстроку в заданной позиции на новую подстроку",
    "answers": [
      "Replace",
      "нет верного ответа"
    ]
  },
  {
    "question": "Защищенные переменные или методы класса, доступные напрямую как из собственного класса, так и из всех производных классов объявляют как:",
    "answers": [
      "protected"
    ]
  },
  {
    "question": "Каждый управляемый поток начинает своё существование c состояния",
    "answers": [
      "Unstarted"
    ]
  },
  {
    "question": "Какие из описаний записаны верно? a. int[4] ages \u003d {30, 54, 4, 10} b. int[] ages \u003d {30, 54, 4, 10} c. int[]ages \u003d new int[4]",
    "answers": [
      "b и с"
    ]
  },
  {
    "question": "Класс, являющийся базовым для реализаций языка, поддерживающих работу с массивами.",
    "answers": [
      "Array"
    ]
  },
  {
    "question": "Метод, выполняющий поиск значения в отсортированном по одному измерению объекте Array, используя для этого алгоритм двоичного поиска",
    "answers": [
      "BinarySearch",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который возвращает 32-разрядное целое число, представляющее количество элементов в заданном измерении массива Array.",
    "answers": [
      "GetLength",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который возвращает false если символ является буквой",
    "answers": [
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который возвращает true, если символ задан в верхнем регистре",
    "answers": [
      "нет верного ответа",
      "IsUpper"
    ]
  },
  {
    "question": "Метод, который возвращает true, если символ задан в нижнем регистре",
    "answers": [
      "IsLower",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который возвращает true, если символ является буквой",
    "answers": [
      "нет верного ответа",
      "IsLetter"
    ]
  },
  {
    "question": "Метод, который возвращает true, если символ является десятичной цифрой.",
    "answers": [
      "нет верного ответа",
      "IsDigit"
    ]
  },
  {
    "question": "Метод, который возвращает true, если символ является числом (десятичной или шестнадцатиричной цифрой)",
    "answers": [
      "IsNumber",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который возвращает численное значение символа, если он является цифрой, и (-1) в противном случае.",
    "answers": [
      "нет верного ответа",
      "GetNumericValue"
    ]
  },
  {
    "question": "Метод, который выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает отсчитываемый от нуля индекс первого найденного вхождения в пределах массива Array или его части.",
    "answers": [
      "нет верного ответа",
      "FindIndex"
    ]
  },
  {
    "question": "Метод, который выполняет поиск элемента, удовлетворяющего условиям указанного предиката, и возвращает последнее найденное вхождение в пределах всего массива Array.",
    "answers": [
      "FindLast",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который заменяет размер массива указанным новым размером.",
    "answers": [
      "нет верного ответа",
      "Resize"
    ]
  },
  {
    "question": "Метод, который извлекает все элементы, удовлетворяющие условиям указанного предиката.",
    "answers": [
      "FindAll",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который изменяет порядок элементов в одномерном массиве Array или в части массива Array на обратный.",
    "answers": [
      "Reverse",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который копирует все элементы текущего одномерного массива Array в заданный одномерный массив Array.",
    "answers": [
      "CopyTo",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который определяет, содержит ли заданный массив элементы, удовлетворяющие условиям указанного предиката.",
    "answers": [
      "нет верного ответа",
      "Exists"
    ]
  },
  {
    "question": "Метод, который преобразует массив одного типа в массив другого типа.",
    "answers": [
      "нет верного ответа",
      "ConvertAll"
    ]
  },
  {
    "question": "Метод, который приводит символ к верхнему регистру",
    "answers": [
      "ToUpper",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который приводит символ к нижнему регистру",
    "answers": [
      "ToLower",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, который сортирует элементы в одномерных объектах Array.",
    "answers": [
      "нет верного ответа",
      "Sort"
    ]
  },
  {
    "question": "Метод, осуществляющий сцепление 2 и более строк.",
    "answers": [
      "Concat",
      "нет верного ответа"
    ]
  },
  {
    "question": "Метод, производящий покодовое сравнение двух строк. Реализации метода позволяют сравнивать как строки, так и подстроки. При этом можно учитывать или не учитывать регистр, особенности национального форматирования дат, чисел и т.д.",
    "answers": [
      "нет верного ответа",
      "CompareOrdinal"
    ]
  },
  {
    "question": "Метод, производящий сравнение двух строк. Реализации метода позволяют сравнивать как строки, так и подстроки. При этом можно учитывать или не учитывать регистр, особенности национального форматирования дат, чисел и т.д.",
    "answers": [
      "нет верного ответа",
      "Compare"
    ]
  },
  {
    "question": "Метод,который копирует диапазон элементов из одного массива Array в другой массив Array и, при необходимости, выполняет приведение типов и упаковку-преобразование.",
    "answers": [
      "Copy",
      "нет верного ответа"
    ]
  },
  {
    "question": "Над строками НЕ определены следующие операции:",
    "answers": [
      "нет верного ответа",
      "изменение части символов в строке"
    ]
  },
  {
    "question": "Объект, который создаётся ОС когда пользователь запускает приложение. Ему выделяетсяотдельное адресное пространство, физически недоступное для других.",
    "answers": [
      "процесс"
    ]
  },
  {
    "question": "Открытые члены класса, доступные откуда угодно объявляются как:",
    "answers": [
      "public"
    ]
  },
  {
    "question": "Позволяет осуществить разбор текста на элементы",
    "answers": [
      "Динамический метод Split"
    ]
  },
  {
    "question": "При работе со строкой как с массивом разрешено только...",
    "answers": [
      "чтение отдельных символов"
    ]
  },
  {
    "question": "Процедура, доступна из своей сборки. Внутренняя",
    "answers": [
      "internal void D() {…}"
    ]
  },
  {
    "question": "Процедура, доступна отовсюду. Открыта",
    "answers": [
      "public void C() {…}"
    ]
  },
  {
    "question": "Процедуры, в отличии от функций a.Всегда вычисляет некоторое значение, возвращаемое как результат функции b.Вызывается в выражениях c.Возвращает формальный результат void d.Вызов процедуры есть оператор языка. e.Имеет входные и выходные аргумент",
    "answers": [
      "с, d и e"
    ]
  },
  {
    "question": "Свойство, возвращающее 64-разрядное целое число, представляющее общее число элементов во всех измерениях объекта Array.",
    "answers": [
      "LongLength"
    ]
  },
  {
    "question": "Свойство, возвращающее значение, позволяющее определить, доступна ли коллекция Array только для чтения.",
    "answers": [
      "IsReadOnly"
    ]
  },
  {
    "question": "Свойство, возвращающее значение, позволяющее определить, имеет ли коллекция Array фиксированный размер.",
    "answers": [
      "IsFixedSize"
    ]
  },
  {
    "question": "Свойство, возвращающее пустую строку",
    "answers": [
      "Empty"
    ]
  },
  {
    "question": "Символы, НЕ являющиеся стандартными escape-последовательностями",
    "answers": [
      "\"\\z\""
    ]
  },
  {
    "question": "Собирает строку из указанных элементов, добавляя разделители",
    "answers": [
      "Статический метод Join"
    ]
  },
  {
    "question": "Состояние, в котором поток приостанавливается на заданный период таймаута.",
    "answers": [
      "WaitSleepJoin"
    ]
  },
  {
    "question": "Удаляет подстроку в заданной позиции",
    "answers": [
      "Remove"
    ]
  },
  {
    "question": "Удаляются пробелы в начале и в конце строки, или только с одного ее конца",
    "answers": [
      "Trim, TrimStart, TrimEnd"
    ]
  },
  {
    "question": "Управлять приоритетами можно через свойство",
    "answers": [
      "Thred.Priority"
    ]
  },
  {
    "question": "Функции, в отличии от процедур a.Всегда вычисляет некоторое значение, возвращаемое как результат функции b.Вызывается в выражениях c.Возвращает формальный результат void d.Вызов процедуры есть оператор языка. e.Имеет входные и выходные аргументы",
    "answers": [
      "a и b"
    ]
  },
  {
    "question": "Функция, возвращает целое",
    "answers": [
      "int B() {…}"
    ]
  },
  {
    "question": "Чтобы усыпиь поток на время следует использовать",
    "answers": [
      "Thred.Sleep"
    ]
  }
]