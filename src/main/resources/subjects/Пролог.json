[
  {
    "question": {
      "id": 61162,
      "text": "Какой из алгоритмов, в общем случае, требует больше оперативной памяти?"
    },
    "answers": [
      {
        "id": 603589,
        "text": "итерационный"
      },
      {
        "id": 603590,
        "text": "не знаю"
      },
      {
        "id": 603588,
        "text": "рекурсивный"
      }
    ],
    "right_answer": {
      "id": 603588,
      "text": "рекурсивный"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63693,
      "text": "Имеются следующие определения: class A: def am(self): print \"am\" class B: def bm(self): print \"bm\" a \u003d A() b \u003d B() Какой из фрагментов кода содержит ошибки?"
    },
    "answers": [
      {
        "id": 613323,
        "text": "A.am \u003d B.bm; a.am()"
      },
      {
        "id": 613324,
        "text": "A.am \u003d b.bm; a.am()"
      },
      {
        "id": 613325,
        "text": "a.am \u003d b.bm; a.am()"
      },
      {
        "id": 613322,
        "text": "a.am \u003d b.bm; a.bm()"
      }
    ],
    "right_answer": {
      "id": 613322,
      "text": "a.am \u003d b.bm; a.bm()"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61171,
      "text": "Если аргументом предиката bound является свободная переменная, то он:"
    },
    "answers": [
      {
        "id": 603619,
        "text": "зависит от значения переменной"
      },
      {
        "id": 603620,
        "text": "истинен"
      },
      {
        "id": 603618,
        "text": "ложен"
      }
    ],
    "right_answer": {
      "id": 603618,
      "text": "ложен"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63699,
      "text": "Даны матрицы a и b. Как получить поэлементное произведение матриц?"
    },
    "answers": [
      {
        "id": 613346,
        "text": "a * b"
      },
      {
        "id": 613348,
        "text": "dot(a, b)"
      },
      {
        "id": 613349,
        "text": "product(a, b)"
      },
      {
        "id": 613347,
        "text": "vdot(a, b)"
      }
    ],
    "right_answer": {
      "id": 613346,
      "text": "a * b"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63666,
      "text": "Какого типа значение получится в результате вычисления следующего выражения: (\u0027 \u0027, )"
    },
    "answers": [
      {
        "id": 613214,
        "text": "str (строка)"
      },
      {
        "id": 613211,
        "text": "tuple (кортеж)"
      },
      {
        "id": 613213,
        "text": "unicode (Unicode-строка)"
      },
      {
        "id": 613212,
        "text": "это синтаксическая ошибка"
      }
    ],
    "right_answer": {
      "id": 613211,
      "text": "tuple (кортеж)"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63691,
      "text": "Как называется отношение, которое имеют между собой следующие два класса: class A(type): def __init__(cls, name, bases, dict): return super(A, cls).__init__(cls, name, bases, dict) B \u003d A(\"B\", (), {})"
    },
    "answers": [
      {
        "id": 613317,
        "text": "ассоциация. A содержит ссылки на B"
      },
      {
        "id": 613314,
        "text": "метакласс. A является метаклассом для B"
      },
      {
        "id": 613315,
        "text": "метакласс. B является метаклассом для A"
      },
      {
        "id": 613316,
        "text": "наследование. B получается наследованием A"
      }
    ],
    "right_answer": {
      "id": 613314,
      "text": "метакласс. A является метаклассом для B"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63689,
      "text": "Сколько элементов будет содержать список, полученный в следующем списковом включении: [x for x in itertools.takewhile(lambda x: x \u003c 23, itertools.count(10))]"
    },
    "answers": [
      {
        "id": 613307,
        "text": "0"
      },
      {
        "id": 613308,
        "text": "10"
      },
      {
        "id": 613306,
        "text": "13"
      },
      {
        "id": 613309,
        "text": "23"
      }
    ],
    "right_answer": {
      "id": 613306,
      "text": "13"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61149,
      "text": "Логическая программа завершается успехом в случае, если:"
    },
    "answers": [
      {
        "id": 603551,
        "text": "был выведен пустой дизъюнкт"
      },
      {
        "id": 603552,
        "text": "был выведен пустой конъюнкт"
      },
      {
        "id": 603553,
        "text": "ни одну из подцелей не удается унифицировать ни с одним дизъюнктом программы"
      }
    ],
    "right_answer": {
      "id": 603551,
      "text": "был выведен пустой дизъюнкт"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61165,
      "text": "Что, скорее всего, произойдет, если удалить предложение, реализующее базис рекурсии?"
    },
    "answers": [
      {
        "id": 603600,
        "text": "ничего"
      },
      {
        "id": 603598,
        "text": "предикат будет терпеть неуспех в большинстве случае"
      },
      {
        "id": 603597,
        "text": "произойдет зацикливание"
      },
      {
        "id": 603599,
        "text": "пролог система выдаст сообщение об ошибке"
      }
    ],
    "right_answer": {
      "id": 603597,
      "text": "произойдет зацикливание"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63681,
      "text": "Какая встроенная функция Python лучше всего подходит для цепочечных вычислений (в частности, вычислений значения многочлена по схеме Горнера)?"
    },
    "answers": [
      {
        "id": 613273,
        "text": "chain()"
      },
      {
        "id": 613271,
        "text": "filter()"
      },
      {
        "id": 613272,
        "text": "map()"
      },
      {
        "id": 613270,
        "text": "reduce()"
      }
    ],
    "right_answer": {
      "id": 613270,
      "text": "reduce()"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61176,
      "text": "Бэктрекинг реализует:"
    },
    "answers": [
      {
        "id": 603634,
        "text": "поиск в глубину"
      },
      {
        "id": 603635,
        "text": "поиск в толщину"
      },
      {
        "id": 603636,
        "text": "поиск в ширину"
      }
    ],
    "right_answer": {
      "id": 603634,
      "text": "поиск в глубину"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61183,
      "text": "Стек точек возврата освобождается в тот момент, когда"
    },
    "answers": [
      {
        "id": 603655,
        "text": "все альтернативные варианты оказываются исчерпанными"
      },
      {
        "id": 603657,
        "text": "одна из подцелей программы терпит неудачу"
      },
      {
        "id": 603656,
        "text": "происходит возврат в то место программы, указатель на которое находился в стеке точек возврата"
      }
    ],
    "right_answer": {
      "id": 603655,
      "text": "все альтернативные варианты оказываются исчерпанными"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61148,
      "text": "Формула в конъюнктивной нормальной форме состоит из:"
    },
    "answers": [
      {
        "id": 603549,
        "text": "дизъюнкции конечного числа конъюнктов"
      },
      {
        "id": 603548,
        "text": "конъюнкции конечного числа дизъюнктов"
      },
      {
        "id": 603550,
        "text": "конъюнкции конечного числа литералов"
      }
    ],
    "right_answer": {
      "id": 603548,
      "text": "конъюнкции конечного числа дизъюнктов"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61167,
      "text": "Какие из алгоритмов проще с логической точки зрения:"
    },
    "answers": [
      {
        "id": 603607,
        "text": "итерационные"
      },
      {
        "id": 603608,
        "text": "не знаю"
      },
      {
        "id": 603606,
        "text": "рекурсивные"
      }
    ],
    "right_answer": {
      "id": 603606,
      "text": "рекурсивные"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61168,
      "text": "Отношение называется транзитивным, если"
    },
    "answers": [
      {
        "id": 603612,
        "text": "для любой пары (A,B), находящейся в этом отношении следует, что пара (B,A) не находится в этом отношении"
      },
      {
        "id": 603611,
        "text": "для любой пары (A,B), находящейся в этом отношении следует, что пара (B,A) также находится в этом отношении"
      },
      {
        "id": 603610,
        "text": "для любых пар (A,B) и (B,C), находящихся в этом отношении следует, что пара (A,С) не находится в этом отношении"
      },
      {
        "id": 603609,
        "text": "для любых пар (A,B) и (B,C), находящихся в этом отношении следует, что пара (A,С) также находится в этом отношении"
      }
    ],
    "right_answer": {
      "id": 603609,
      "text": "для любых пар (A,B) и (B,C), находящихся в этом отношении следует, что пара (A,С) также находится в этом отношении"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63686,
      "text": "Какой из перечисленных языков программирования поддерживают функциональное программирование?"
    },
    "answers": [
      {
        "id": 613292,
        "text": "LISP"
      },
      {
        "id": 613295,
        "text": "Pascal"
      },
      {
        "id": 613294,
        "text": "Visual Basic"
      },
      {
        "id": 613293,
        "text": "С#"
      }
    ],
    "right_answer": {
      "id": 613292,
      "text": "LISP"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63678,
      "text": "Карринг — это…"
    },
    "answers": [
      {
        "id": 613262,
        "text": "возврат объекта-функции из другой функции"
      },
      {
        "id": 613260,
        "text": "передача функции в другую функцию"
      },
      {
        "id": 613261,
        "text": "перенос параметров функции в ее результат"
      },
      {
        "id": 613259,
        "text": "получение новой функции на основе заданной функции, при котором часть аргументов получает значение"
      }
    ],
    "right_answer": {
      "id": 613259,
      "text": "получение новой функции на основе заданной функции, при котором часть аргументов получает значение"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63667,
      "text": "Что будет получено в результате вычисления следующего выражения: 0 \u003c [1, 4], [1] \u003c 3"
    },
    "answers": [
      {
        "id": 613215,
        "text": "(True, False) (или (1, 0))"
      },
      {
        "id": 613216,
        "text": "False (или 0)"
      },
      {
        "id": 613218,
        "text": "True (или 1)"
      },
      {
        "id": 613217,
        "text": "синтаксической ошибки нет, но поведение интерпретатора неопределенно"
      }
    ],
    "right_answer": {
      "id": 613215,
      "text": "(True, False) (или (1, 0))"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61158,
      "text": "В программе на Прологе вместо \":-\" можно писать"
    },
    "answers": [
      {
        "id": 603577,
        "text": "and"
      },
      {
        "id": 603576,
        "text": "if"
      },
      {
        "id": 603578,
        "text": "or"
      }
    ],
    "right_answer": {
      "id": 603576,
      "text": "if"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63661,
      "text": "Какие из этих утверждений о Python НЕ верны?"
    },
    "answers": [
      {
        "id": 613193,
        "text": "Python имеет обширную библиотеку стандартных модулей"
      },
      {
        "id": 613194,
        "text": "Python использует промежуточный код"
      },
      {
        "id": 613191,
        "text": "программы на Python транслируются в машинные коды, которые затем исполняются"
      },
      {
        "id": 613192,
        "text": "язык Python применяется для быстрой разработки приложений"
      }
    ],
    "right_answer": {
      "id": 613191,
      "text": "программы на Python транслируются в машинные коды, которые затем исполняются"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63700,
      "text": "Имеется массив c, для которого shape(c) равна (2, 2, 2). Какая из приведенных ниже операций получения среза вызовет ошибку?"
    },
    "answers": [
      {
        "id": 613351,
        "text": "c[...,1]"
      },
      {
        "id": 613350,
        "text": "c[1,2]"
      },
      {
        "id": 613353,
        "text": "c[:,-1]"
      },
      {
        "id": 613352,
        "text": "c[::2,1]"
      }
    ],
    "right_answer": {
      "id": 613350,
      "text": "c[1,2]"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61143,
      "text": "Наиболее популярный в Европе язык искусственного интеллекта это"
    },
    "answers": [
      {
        "id": 603534,
        "text": "Лисп"
      },
      {
        "id": 603533,
        "text": "Пролог"
      },
      {
        "id": 603535,
        "text": "Флэнг"
      }
    ],
    "right_answer": {
      "id": 603533,
      "text": "Пролог"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63662,
      "text": "Какие парадигмы и стили программирования НЕ поддерживает Python ?"
    },
    "answers": [
      {
        "id": 613198,
        "text": "модульный"
      },
      {
        "id": 613196,
        "text": "объектно-ориентированный"
      },
      {
        "id": 613195,
        "text": "программирование в ограничениях"
      },
      {
        "id": 613197,
        "text": "функциональное программирование"
      }
    ],
    "right_answer": {
      "id": 613195,
      "text": "программирование в ограничениях"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63688,
      "text": "Начало определения функции f выглядит так: def f(a, b, c\u003dNone, d\u003d\"0\"): Какие из следующих вариантов вызова приведут к ошибке на этапе присваивания фактических параметров формальным?"
    },
    "answers": [
      {
        "id": 613301,
        "text": "f()"
      },
      {
        "id": 613302,
        "text": "f(1, 2)"
      },
      {
        "id": 613304,
        "text": "f(1, 2, 3, 4)"
      },
      {
        "id": 613303,
        "text": "f(1, 2, d\u003d3)"
      },
      {
        "id": 613305,
        "text": "f(1, 2, d\u003d3, c\u003d4)"
      }
    ],
    "right_answer": {
      "id": 613301,
      "text": "f()"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63677,
      "text": "Какие признаки являются характерными для функциональных языков? 1) возможность строить функции над функциями 2) возможность определения функции пользователем 3) построение программы как композиции функций 4) применение операторов"
    },
    "answers": [
      {
        "id": 613256,
        "text": "1 и 2"
      },
      {
        "id": 613255,
        "text": "1 и 3"
      },
      {
        "id": 613257,
        "text": "2 и 3"
      },
      {
        "id": 613258,
        "text": "2 и 4"
      }
    ],
    "right_answer": {
      "id": 613255,
      "text": "1 и 3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61169,
      "text": "Может ли в программе быть несколько разделов описаний внутренней цели?"
    },
    "answers": [
      {
        "id": 603614,
        "text": "да"
      },
      {
        "id": 603615,
        "text": "не знаю"
      },
      {
        "id": 603613,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603613,
      "text": "нет"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63698,
      "text": "Чему будет равно значение следующего выражения: size(ones((2, 5)))"
    },
    "answers": [
      {
        "id": 613343,
        "text": "\"(2, 5)\""
      },
      {
        "id": 613344,
        "text": "\"(5, 2)\""
      },
      {
        "id": 613342,
        "text": "10"
      },
      {
        "id": 613345,
        "text": "array([2, 5])"
      }
    ],
    "right_answer": {
      "id": 613342,
      "text": "10"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61156,
      "text": "Отсечение предназначено для того, чтобы:"
    },
    "answers": [
      {
        "id": 603572,
        "text": "запретить поиск альтернативных решений для подцелей, расположенных левее и правее отсечения"
      },
      {
        "id": 603570,
        "text": "запретить поиск альтернативных решений для подцелей, расположенных левее отсечения"
      },
      {
        "id": 603571,
        "text": "запретить поиск альтернативных решений для подцелей, расположенных правее отсечения"
      }
    ],
    "right_answer": {
      "id": 603570,
      "text": "запретить поиск альтернативных решений для подцелей, расположенных левее отсечения"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63663,
      "text": "Что будет выведено в следующем примере: \u003e\u003e\u003e a \u003d [1, 2, 3] \u003e\u003e\u003e a[1] \u003d a[1:2] \u003e\u003e\u003e print a[1]"
    },
    "answers": [
      {
        "id": 613200,
        "text": "2"
      },
      {
        "id": 613202,
        "text": "[1, 2]"
      },
      {
        "id": 613201,
        "text": "[1]"
      },
      {
        "id": 613199,
        "text": "[2]"
      }
    ],
    "right_answer": {
      "id": 613199,
      "text": "[2]"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63664,
      "text": "Что выведет следующая программа: S \u003d 0 for i in range(1, 10, 2): if i % 2 \u003d\u003d 0: S \u003d S + i print S"
    },
    "answers": [
      {
        "id": 613203,
        "text": "0"
      },
      {
        "id": 613206,
        "text": "1"
      },
      {
        "id": 613205,
        "text": "10"
      },
      {
        "id": 613204,
        "text": "20"
      }
    ],
    "right_answer": {
      "id": 613203,
      "text": "0"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61170,
      "text": "Быстрее выполняются и используют меньше оперативной памяти:"
    },
    "answers": [
      {
        "id": 603616,
        "text": "детерминированные предикаты"
      },
      {
        "id": 603617,
        "text": "недетерминированные предикаты"
      }
    ],
    "right_answer": {
      "id": 603616,
      "text": "детерминированные предикаты"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63697,
      "text": "Чему будет равно значение следующего выражения: shape(shape(array([[1, 2, 3], [4, 5, 6]], Int)))"
    },
    "answers": [
      {
        "id": 613338,
        "text": "\"(2,) \""
      },
      {
        "id": 613339,
        "text": "\"(3,) \""
      },
      {
        "id": 613340,
        "text": "\"(3,2) \""
      },
      {
        "id": 613341,
        "text": "\"(6,) \""
      }
    ],
    "right_answer": {
      "id": 613338,
      "text": "\"(2,) \""
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61179,
      "text": "При откате к точке возврата связанные переменные, означенные после нее:"
    },
    "answers": [
      {
        "id": 603644,
        "text": "не меняют своих значений"
      },
      {
        "id": 603645,
        "text": "означиваются следующими значениями"
      },
      {
        "id": 603643,
        "text": "становятся свободными"
      }
    ],
    "right_answer": {
      "id": 603643,
      "text": "становятся свободными"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63680,
      "text": "Какие варианты использования значений генераторного выражения gg имеют смысл? gg \u003d ((s[i], s[i+1]) for i in range(0, len(s)-1, 2)) 1) print gg 2) d \u003d dict(gg) 3) print len(gg) 4) print list(gg)"
    },
    "answers": [
      {
        "id": 613267,
        "text": "1 и 2"
      },
      {
        "id": 613266,
        "text": "1 и 3"
      },
      {
        "id": 613268,
        "text": "2 и 3"
      },
      {
        "id": 613269,
        "text": "2 и 4"
      }
    ],
    "right_answer": {
      "id": 613266,
      "text": "1 и 3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63669,
      "text": "Что будет выведено следующей программой: A \u003d B \u003d 1 a \u003d \"A\" * 5 b \u003d \"B\" * 5 a \u003d a + b * 5 print a, b"
    },
    "answers": [
      {
        "id": 613226,
        "text": "30 5"
      },
      {
        "id": 613224,
        "text": "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB BBBBB"
      },
      {
        "id": 613225,
        "text": "AAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBBAAAAABBBBB, BBBBB"
      },
      {
        "id": 613223,
        "text": "AAAAABBBBBBBBBBBBBBBBBBBBBBBBB BBBBB"
      }
    ],
    "right_answer": {
      "id": 613223,
      "text": "AAAAABBBBBBBBBBBBBBBBBBBBBBBBB BBBBB"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61154,
      "text": "Факт - это предложение, которое состоит"
    },
    "answers": [
      {
        "id": 603565,
        "text": "из заголовка и тела"
      },
      {
        "id": 603564,
        "text": "только из заголовка"
      },
      {
        "id": 603566,
        "text": "только из тела"
      }
    ],
    "right_answer": {
      "id": 603564,
      "text": "только из заголовка"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63694,
      "text": "Как называется отношение, которое имеют следующие два класса: class A(object): def __init__(self, x): self._mydata \u003d x def m1(self): raise NotImplementedError class B(A): def __init__(self, x): super(B, self).__init__(x) def m1(self): return self._mydata"
    },
    "answers": [
      {
        "id": 613329,
        "text": "агрегация. Экземпляры A содержат экземпляры класса B"
      },
      {
        "id": 613327,
        "text": "ассоциация. Экземпляры A содержат ссылки на экземпляры класса B"
      },
      {
        "id": 613328,
        "text": "наследование. A получается наследованием B"
      },
      {
        "id": 613326,
        "text": "наследование. B получается наследованием A"
      }
    ],
    "right_answer": {
      "id": 613326,
      "text": "наследование. B получается наследованием A"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63696,
      "text": "Класс имеет методы __iter__() и next(). О чем это говорит и как пользоваться этим методом? class A: #... def __iter__(self): #... def next(self): #... a \u003d A(1, 2, 3)"
    },
    "answers": [
      {
        "id": 613337,
        "text": "генератор. Пользоваться можно так: for i in a(): print i"
      },
      {
        "id": 613334,
        "text": "итератор. Пользоваться можно так: for i in a: print i"
      },
      {
        "id": 613335,
        "text": "нет особого названия. Пользоваться можно так: print a.next()"
      },
      {
        "id": 613336,
        "text": "последовательность. Пользоваться можно так: print a[2]"
      }
    ],
    "right_answer": {
      "id": 613334,
      "text": "итератор. Пользоваться можно так: for i in a: print i"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61178,
      "text": "Метод повтора, определяемый пользователем:"
    },
    "answers": [
      {
        "id": 603640,
        "text": "позволяет организовывать откат, до тех пор, пока не будет выполнено некоторое условие"
      },
      {
        "id": 603642,
        "text": "позволяет организовывать циклы, подобные циклам в императивных языках"
      },
      {
        "id": 603641,
        "text": "позволяет получать всевозможные решения"
      }
    ],
    "right_answer": {
      "id": 603640,
      "text": "позволяет организовывать откат, до тех пор, пока не будет выполнено некоторое условие"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63692,
      "text": "Разбиение программы на объекты называется:"
    },
    "answers": [
      {
        "id": 613320,
        "text": "абстракцией"
      },
      {
        "id": 613318,
        "text": "декомпозицией"
      },
      {
        "id": 613321,
        "text": "инкапсуляцией"
      },
      {
        "id": 613319,
        "text": "полиморфизмом"
      }
    ],
    "right_answer": {
      "id": 613318,
      "text": "декомпозицией"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63671,
      "text": "Что будет получено в результате вычисления следующего выражения: 0 \u003c [1, 4][1] \u003c 3 or None"
    },
    "answers": [
      {
        "id": 613233,
        "text": "0"
      },
      {
        "id": 613232,
        "text": "1"
      },
      {
        "id": 613231,
        "text": "None"
      },
      {
        "id": 613234,
        "text": "синтаксическая ошибка"
      }
    ],
    "right_answer": {
      "id": 613231,
      "text": "None"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61182,
      "text": "О наличии у текущей подцели альтернативных решений (в окне трассировки) индицирует:"
    },
    "answers": [
      {
        "id": 603652,
        "text": "символа \"*\";"
      },
      {
        "id": 603653,
        "text": "слова \"FAIL\""
      },
      {
        "id": 603654,
        "text": "слова \"RETURN\""
      }
    ],
    "right_answer": {
      "id": 603652,
      "text": "символа \"*\";"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61160,
      "text": "Связанная переменная - это переменная, которая"
    },
    "answers": [
      {
        "id": 603584,
        "text": "имеет \"начальное\" значение, соответствующее домену (ноль для числового домена; пустая строка - для строкового домена и т.д.)"
      },
      {
        "id": 603582,
        "text": "имеет какое-то значение"
      },
      {
        "id": 603583,
        "text": "не имеет никакого значения"
      }
    ],
    "right_answer": {
      "id": 603582,
      "text": "имеет какое-то значение"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63702,
      "text": "Чему будет равно значение следующего выражения: shape(transpose(ones((2, 3, 4))))"
    },
    "answers": [
      {
        "id": 613360,
        "text": "(2, 4, 3)"
      },
      {
        "id": 613361,
        "text": "(3, 2, 4)"
      },
      {
        "id": 613359,
        "text": "(3, 4, 2)"
      },
      {
        "id": 613358,
        "text": "(4, 3, 2)"
      }
    ],
    "right_answer": {
      "id": 613358,
      "text": "(4, 3, 2)"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61145,
      "text": "Наиболее близки к человеческому мышлению"
    },
    "answers": [
      {
        "id": 603539,
        "text": "декларативные языки"
      },
      {
        "id": 603540,
        "text": "императивные языки"
      },
      {
        "id": 603541,
        "text": "машинный язык"
      }
    ],
    "right_answer": {
      "id": 603539,
      "text": "декларативные языки"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61181,
      "text": "Откат происходит в то место программы, указатель на которое находится:"
    },
    "answers": [
      {
        "id": 603649,
        "text": "в конце стека точек возврата"
      },
      {
        "id": 603651,
        "text": "в начале стека точек возврата"
      },
      {
        "id": 603650,
        "text": "в случайном месте стека точек возврата"
      }
    ],
    "right_answer": {
      "id": 603649,
      "text": "в конце стека точек возврата"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63679,
      "text": "Какая из перечисленных функций имеет побочные эффекты: lst \u003d [] def A(lst, x): return lst + [x] def B(x): lst.append(x) return lst def C(lst, x): return lst.count(x)"
    },
    "answers": [
      {
        "id": 613265,
        "text": "А"
      },
      {
        "id": 613263,
        "text": "В"
      },
      {
        "id": 613264,
        "text": "С"
      }
    ],
    "right_answer": {
      "id": 613263,
      "text": "В"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63673,
      "text": "Какие встроенные функции служат для создания объектов определенного типа (являются конструкторами классов или функциями-фабриками)? 1) chr() 2) dict() 3) isinstance() 4) tuple()"
    },
    "answers": [
      {
        "id": 613241,
        "text": "1 и 2"
      },
      {
        "id": 613240,
        "text": "1 и 3"
      },
      {
        "id": 613242,
        "text": "2 и 3"
      },
      {
        "id": 613239,
        "text": "2 и 4"
      }
    ],
    "right_answer": {
      "id": 613239,
      "text": "2 и 4"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61163,
      "text": "Сколько базисов рекурсии должно быть в рекурсивной процедуре?"
    },
    "answers": [
      {
        "id": 603591,
        "text": "не менее одного"
      },
      {
        "id": 603593,
        "text": "ни одного"
      },
      {
        "id": 603592,
        "text": "один"
      }
    ],
    "right_answer": {
      "id": 603591,
      "text": "не менее одного"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61159,
      "text": "Можно ли поменять значение связанной переменной?"
    },
    "answers": [
      {
        "id": 603581,
        "text": "можно"
      },
      {
        "id": 603580,
        "text": "можно, если изменить значение объекта, с которым она связана"
      },
      {
        "id": 603579,
        "text": "нельзя"
      }
    ],
    "right_answer": {
      "id": 603579,
      "text": "нельзя"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61164,
      "text": "Одно отношение называется транзитивным замыканием другого отношения, если"
    },
    "answers": [
      {
        "id": 603595,
        "text": "оно включает исходное отношение и является транзитивным отношением"
      },
      {
        "id": 603596,
        "text": "это наибольшее транзитивное отношение, включающее исходное отношение"
      },
      {
        "id": 603594,
        "text": "это наименьшее транзитивное отношение, включающее исходное отношение"
      }
    ],
    "right_answer": {
      "id": 603594,
      "text": "это наименьшее транзитивное отношение, включающее исходное отношение"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61146,
      "text": "Какие из перечисленных ниже объектов используются при конструировании термов?"
    },
    "answers": [
      {
        "id": 603544,
        "text": "кванторы"
      },
      {
        "id": 603543,
        "text": "предикатные символы"
      },
      {
        "id": 603542,
        "text": "функциональные символы"
      }
    ],
    "right_answer": {
      "id": 603542,
      "text": "функциональные символы"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61155,
      "text": "Свободная переменная - это переменная, которая"
    },
    "answers": [
      {
        "id": 603568,
        "text": "имеет \"начальное\" значение, соответствующее домену (ноль для числового домена; пустая строка – для строкового домена и т.д.)"
      },
      {
        "id": 603569,
        "text": "имеет какое-то значение"
      },
      {
        "id": 603567,
        "text": "не имеет никакого значения"
      }
    ],
    "right_answer": {
      "id": 603567,
      "text": "не имеет никакого значения"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63690,
      "text": "Сокрытие информации о внутреннем устройстве объекта, при котором вся работа с объектом ведется только через общедоступный интерфейс называется"
    },
    "answers": [
      {
        "id": 613312,
        "text": "абстракцией"
      },
      {
        "id": 613313,
        "text": "агрегацией"
      },
      {
        "id": 613311,
        "text": "декомпозицией"
      },
      {
        "id": 613310,
        "text": "инкапсуляцией"
      }
    ],
    "right_answer": {
      "id": 613310,
      "text": "инкапсуляцией"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61140,
      "text": "Программируя в императивном стиле, программист должен ответить на вопрос:"
    },
    "answers": [
      {
        "id": 603523,
        "text": "как решать?"
      },
      {
        "id": 603524,
        "text": "что решать?"
      }
    ],
    "right_answer": {
      "id": 603523,
      "text": "как решать?"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61173,
      "text": "Можно ли, в разделе описания предложений использовать в качестве первого символа имени константы прописной символ?"
    },
    "answers": [
      {
        "id": 603625,
        "text": "да"
      },
      {
        "id": 603626,
        "text": "не знаю"
      },
      {
        "id": 603624,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603624,
      "text": "нет"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61177,
      "text": "Можно ли в методе отката после неудачи обойтись без использования стандартного предиката FAIL?"
    },
    "answers": [
      {
        "id": 603637,
        "text": "да"
      },
      {
        "id": 603639,
        "text": "не знаю"
      },
      {
        "id": 603638,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603637,
      "text": "да"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63682,
      "text": "В каких местах допущены ошибки в генераторном выражении, выдающем список координат полей шахматной доски? (j+str(i) for i in xrange(1, 9) for j in \"abcdefgh\")"
    },
    "answers": [
      {
        "id": 613277,
        "text": "ошибка в for i in xrange(1, 9)"
      },
      {
        "id": 613275,
        "text": "ошибка в for j in \"abcdefgh\""
      },
      {
        "id": 613276,
        "text": "ошибка в j+str(i)"
      },
      {
        "id": 613274,
        "text": "ошибок нет"
      }
    ],
    "right_answer": {
      "id": 613274,
      "text": "ошибок нет"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63701,
      "text": "Какой длины строки можно использовать в Python?"
    },
    "answers": [
      {
        "id": 613356,
        "text": "256 символов"
      },
      {
        "id": 613357,
        "text": "65536 символов"
      },
      {
        "id": 613354,
        "text": "длина строк ограничивается имеющейся памятью"
      },
      {
        "id": 613355,
        "text": "длины строк должны быть не больше, чем при их определении"
      }
    ],
    "right_answer": {
      "id": 613354,
      "text": "длина строк ограничивается имеющейся памятью"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61175,
      "text": "Можно ли в качестве значения для переменной типа symbol использовать последовательность символов английского алфавита, не заключенную в кавычки?"
    },
    "answers": [
      {
        "id": 603630,
        "text": "да"
      },
      {
        "id": 603632,
        "text": "не знаю"
      },
      {
        "id": 603631,
        "text": "нет"
      },
      {
        "id": 603633,
        "text": "поиск в высоту"
      }
    ],
    "right_answer": {
      "id": 603630,
      "text": "да"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63672,
      "text": "Какими операторами можно импортировать модуль? 1) from-import 2) exec 3) import 4) imp"
    },
    "answers": [
      {
        "id": 613236,
        "text": "1 и 2"
      },
      {
        "id": 613235,
        "text": "1 и 3"
      },
      {
        "id": 613237,
        "text": "2 и 3"
      },
      {
        "id": 613238,
        "text": "2 и 4"
      }
    ],
    "right_answer": {
      "id": 613235,
      "text": "1 и 3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61180,
      "text": "Результат вычисления текущей подцели выводится (в окне трассировки) после:"
    },
    "answers": [
      {
        "id": 603647,
        "text": "символа \"*\";"
      },
      {
        "id": 603648,
        "text": "слова \"FAIL\""
      },
      {
        "id": 603646,
        "text": "слова \"RETURN\""
      }
    ],
    "right_answer": {
      "id": 603646,
      "text": "слова \"RETURN\""
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61153,
      "text": "Обязательно ли метод резолюций завершается за конечное число шагов?:"
    },
    "answers": [
      {
        "id": 603562,
        "text": "да"
      },
      {
        "id": 603563,
        "text": "не знаю"
      },
      {
        "id": 603561,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603561,
      "text": "нет"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61152,
      "text": "Факт состоит:"
    },
    "answers": [
      {
        "id": 603559,
        "text": "из одного положительного и отрицательных литералов"
      },
      {
        "id": 603558,
        "text": "только из одного положительного литерала"
      },
      {
        "id": 603560,
        "text": "только из отрицательных литералов"
      }
    ],
    "right_answer": {
      "id": 603558,
      "text": "только из одного положительного литерала"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61166,
      "text": "В результате выполнения предиката fib_fast(3,X,Y) переменные X и Y получат значения:"
    },
    "answers": [
      {
        "id": 603605,
        "text": "X\u003d1, Y\u003d1"
      },
      {
        "id": 603603,
        "text": "X\u003d1, Y\u003d2"
      },
      {
        "id": 603604,
        "text": "X\u003d2, Y\u003d2"
      },
      {
        "id": 603601,
        "text": "X\u003d2, Y\u003d3"
      },
      {
        "id": 603602,
        "text": "X\u003d3, Y\u003d5"
      }
    ],
    "right_answer": {
      "id": 603601,
      "text": "X\u003d2, Y\u003d3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63674,
      "text": "Какими способами можно получить доступ к функции fun() из модуля fns? 1) import fns.fun; fns.fun() 2) from fns import fun; fun() 3) import fns; fns.fun() 4) import fns.fun as fun; fun()"
    },
    "answers": [
      {
        "id": 613246,
        "text": "1 и 2"
      },
      {
        "id": 613245,
        "text": "1 и 3"
      },
      {
        "id": 613243,
        "text": "2 и 3"
      },
      {
        "id": 613244,
        "text": "2 и 4"
      }
    ],
    "right_answer": {
      "id": 613243,
      "text": "2 и 3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61150,
      "text": "В правиле резолюции контрарными литералами называются:"
    },
    "answers": [
      {
        "id": 603554,
        "text": "вычеркнутые формулы"
      },
      {
        "id": 603555,
        "text": "исходные дизъюнкты"
      }
    ],
    "right_answer": {
      "id": 603554,
      "text": "вычеркнутые формулы"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61184,
      "text": "Метод отсечения и отката:"
    },
    "answers": [
      {
        "id": 603660,
        "text": "позволяет организовывать откат, до тех пор, пока не будет выполнено некоторое условие"
      },
      {
        "id": 603658,
        "text": "позволяет организовывать циклы, подобные циклам в императивных языках"
      },
      {
        "id": 603659,
        "text": "позволяет получать всевозможные решения"
      }
    ],
    "right_answer": {
      "id": 603658,
      "text": "позволяет организовывать циклы, подобные циклам в императивных языках"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61141,
      "text": "Как правило, исходный текст программы на Прологе по сравнению с исходным текстом программы на императивном языке по размеру:"
    },
    "answers": [
      {
        "id": 603526,
        "text": "длиннее"
      },
      {
        "id": 603525,
        "text": "короче"
      },
      {
        "id": 603527,
        "text": "примерно такой же"
      }
    ],
    "right_answer": {
      "id": 603525,
      "text": "короче"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61144,
      "text": "Как правило, программу на Прологе по сравнению с программой на императивном языке понимать и отлаживать:"
    },
    "answers": [
      {
        "id": 603536,
        "text": "легче"
      },
      {
        "id": 603537,
        "text": "примерно так же"
      },
      {
        "id": 603538,
        "text": "сложнее"
      }
    ],
    "right_answer": {
      "id": 603536,
      "text": "легче"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61174,
      "text": "Можно ли, в разделе описания констант использовать в качестве первого символа имени константы прописной символ?"
    },
    "answers": [
      {
        "id": 603627,
        "text": "да"
      },
      {
        "id": 603629,
        "text": "не знаю"
      },
      {
        "id": 603628,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603627,
      "text": "да"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63695,
      "text": "Какую роль играет xx в Python-программе, и чему должен быть равен XXX: class A(object): def xx(cls, x): ... xx \u003d XXX(xx)"
    },
    "answers": [
      {
        "id": 613330,
        "text": "метод класса, XXX равен classmethod"
      },
      {
        "id": 613331,
        "text": "метод, XXX равен instancemethod"
      },
      {
        "id": 613332,
        "text": "статический метод, XXX равен staticmethod"
      },
      {
        "id": 613333,
        "text": "функция, XXX можно опустить"
      }
    ],
    "right_answer": {
      "id": 613330,
      "text": "метод класса, XXX равен classmethod"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63675,
      "text": "Для чего нужны функции модуля gettext?"
    },
    "answers": [
      {
        "id": 613247,
        "text": "для обеспечения интернационализации программы"
      },
      {
        "id": 613248,
        "text": "для показа строки ввода на экране и ввода текста от пользователя"
      },
      {
        "id": 613249,
        "text": "для получения текста от пользователя"
      },
      {
        "id": 613250,
        "text": "для чтения строки со стандартного ввода"
      }
    ],
    "right_answer": {
      "id": 613247,
      "text": "для обеспечения интернационализации программы"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61147,
      "text": "Вопрос состоит:"
    },
    "answers": [
      {
        "id": 603546,
        "text": "из одного положительного и отрицательных литералов"
      },
      {
        "id": 603547,
        "text": "только из одного положительного литерала"
      },
      {
        "id": 603545,
        "text": "только из отрицательных литералов"
      }
    ],
    "right_answer": {
      "id": 603545,
      "text": "только из отрицательных литералов"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61157,
      "text": "Если убрать \"красное\" отсечение, то программа"
    },
    "answers": [
      {
        "id": 603573,
        "text": "будет выдавать неправильные решения"
      },
      {
        "id": 603575,
        "text": "будет выдавать те же решения, что и при наличии отсечения"
      },
      {
        "id": 603574,
        "text": "перестанет выдавать правильные решения"
      }
    ],
    "right_answer": {
      "id": 603573,
      "text": "будет выдавать неправильные решения"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63668,
      "text": "Какие характеристики можно отнести к языку программирования Python?"
    },
    "answers": [
      {
        "id": 613222,
        "text": "большая стандартная библиотека модулей"
      },
      {
        "id": 613219,
        "text": "все указанные"
      },
      {
        "id": 613220,
        "text": "многоплатформный"
      },
      {
        "id": 613221,
        "text": "удобен для встраивания в проекты на C/C++"
      }
    ],
    "right_answer": {
      "id": 613219,
      "text": "все указанные"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63676,
      "text": "Какая операция выполняет пересечение множеств: from sets import Set as set A \u003d set([1, 2, 3]) B \u003d set([2, 3, 7])"
    },
    "answers": [
      {
        "id": 613251,
        "text": "A \u0026 B"
      },
      {
        "id": 613254,
        "text": "A * B"
      },
      {
        "id": 613253,
        "text": "A ^ B"
      },
      {
        "id": 613252,
        "text": "A | B"
      }
    ],
    "right_answer": {
      "id": 613251,
      "text": "A \u0026 B"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63670,
      "text": "Сколько элементов будет содержать список L (то есть, чему будет равно len(L)) после выполнения следующего кода: L \u003d [] L.append([1,2,3]) L.insert(1, \"abc\") del L[0][0]"
    },
    "answers": [
      {
        "id": 613228,
        "text": "1"
      },
      {
        "id": 613229,
        "text": "2"
      },
      {
        "id": 613227,
        "text": "3"
      },
      {
        "id": 613230,
        "text": "произойдет ошибка"
      }
    ],
    "right_answer": {
      "id": 613227,
      "text": "3"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61151,
      "text": "В правиле резолюции резольвируемыми называются:"
    },
    "answers": [
      {
        "id": 603557,
        "text": "вычеркнутые формулы"
      },
      {
        "id": 603556,
        "text": "исходные дизъюнкты"
      }
    ],
    "right_answer": {
      "id": 603556,
      "text": "исходные дизъюнкты"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61142,
      "text": "В основу проекта ЭВМ какого поколения был положен Пролог?"
    },
    "answers": [
      {
        "id": 603532,
        "text": "второго"
      },
      {
        "id": 603531,
        "text": "первого"
      },
      {
        "id": 603528,
        "text": "пятого"
      },
      {
        "id": 603529,
        "text": "третьего"
      },
      {
        "id": 603530,
        "text": "четвертого"
      }
    ],
    "right_answer": {
      "id": 603528,
      "text": "пятого"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61172,
      "text": "Можно ли не описывать в разделе описания предикатов предикат, реализованный в разделе описания предложений?"
    },
    "answers": [
      {
        "id": 603622,
        "text": "да"
      },
      {
        "id": 603623,
        "text": "не знаю"
      },
      {
        "id": 603621,
        "text": "нет"
      }
    ],
    "right_answer": {
      "id": 603621,
      "text": "нет"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 61161,
      "text": "При рассмотрении процедурной модели программы порядок подцелей в предложении и условиях предложений в процедуре:"
    },
    "answers": [
      {
        "id": 603585,
        "text": "имеет значение"
      },
      {
        "id": 603587,
        "text": "не знаю"
      },
      {
        "id": 603586,
        "text": "не имеет значения"
      }
    ],
    "right_answer": {
      "id": 603585,
      "text": "имеет значение"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63665,
      "text": "Сколько видимых символов будет напечатано после выполнения следующего кода: S \u003d \"\\n123\\\\\" print S"
    },
    "answers": [
      {
        "id": 613207,
        "text": "4"
      },
      {
        "id": 613209,
        "text": "5"
      },
      {
        "id": 613210,
        "text": "6"
      },
      {
        "id": 613208,
        "text": "7"
      }
    ],
    "right_answer": {
      "id": 613207,
      "text": "4"
    },
    "multiple_choice": false
  },
  {
    "question": {
      "id": 63703,
      "text": "Чему будет равно значение следующего выражения: shape(array([[1, 2, 3], [4, 5, 6]]).flat)"
    },
    "answers": [
      {
        "id": 613365,
        "text": "\"(2, 3)\""
      },
      {
        "id": 613364,
        "text": "\"(3, 2)\""
      },
      {
        "id": 613363,
        "text": "\"(3,)\""
      },
      {
        "id": 613362,
        "text": "\"(6,)\""
      }
    ],
    "right_answer": {
      "id": 613362,
      "text": "\"(6,)\""
    },
    "multiple_choice": false
  }
]